d[which(str_detect(d$species, "\\?")),c("species")] <- NA
# remove "sp"
d$species[which(str_detect(d$species, "^sp[1-9p]*$"))] <- NA
# check that when higher level is NA, the lower levels are NA
all(is.na(filter(d, is.na(family))$genus))
all(is.na(filter(d, family=="ni")$genus))
all(is.na(filter(d, is.na(genus))$species))
# check that each genus has the same family
filter(summarise(group_by(d, genus), n=length(unique(family))), n>1)
# and most species suffix should belong to only one genus
filter(summarise(group_by(d, species), n=length(unique(genus))), n>1)
# 4 exceptions, OK.
# remove non-fish
d <- d[-which(str_detect(d$family, "^crabe")),]
d <- d[-which(str_detect(d$family, "^crevette")),]
d <- d[-which(str_detect(d$family, "^vers")),]
d <- d[-which(d$family == "squille"),]
d <- d[-which(d$family == "méduse"),]
d <- d[-which(d$family == "octopodidae"),]
d <- d[-which(d$family == "loliginidae"),]
d <- d[-which(d$family == "sepiida"),]
d <- d[-which(d$family == "sepiolidae"),]
d <- d[-which(d$family == "nephropidae"),]
d <- d[-which(d$family == "pinnotheridae"),]
d <- d[-which(d$family == "mysis"),]
d <- d[-which(d$family == "copépodes"),]
# remove non-coastal fish
d <- d[-which(d$family == "engraulidae"),]
d <- d[-which(d$family == "clupeidae"),]
d <- d[-which(d$family == "scombridae"),]
d <- d[-which(d$family == "sphyraenidae"),]
d <- d[-which(d$family == "torpedinidae"),] ## raies
d <- d[-which(d$family == "myctophidae"),] ## poissons lanternes = pélagiques
d <- d[-which(d$genus == "trachurus"),]
# # check
# print(arrange(unique(select(d, family, genus, species)), family, genus, species), n=200)
# summary(d)
# unique(d$site)
# unique(d$project)
# sort(unique(d$family))
# sort(unique(d$genus))
# sort(unique(d$species))
# cleanup taxonomic names
d$family[which(d$family == "ni")] <- "unidentified"
d$family[which(d$family == "anguilliformes")] <- "unidentified"
d$family <- str_to_title(d$family)
d$genus <- str_to_title(d$genus)
d$species <- str_c(d$genus, " ", d$species)
## Prepare ancillary data ----
# Prepare map
range(d$lat)
range(d$lon)
# read coastline extracted on this domain
coast <- read.csv("data/gshhg_nw_med_h.csv")
# and plot it
map <- ggplot(mapping=aes(x=lon, y=lat)) + list(
geom_polygon(data=coast, fill="white", colour="grey50", size=0.25),
coord_quickmap(),
scale_x_continuous(expand=c(0,0)), scale_y_continuous(expand=c(0,0)),
theme(
axis.ticks=element_blank(),
axis.title=element_blank(),
axis.text=element_blank()
)
)
map
# plot sites to check
sites$hjust <- ifelse(sites$lon<4, -0.1, 1.1)
sites$hjust[sites$site %in% c("Marseille", "La Ciotat")] <- -0.1
sites$vjust <- 0.5
sites$vjust[sites$site %in% c("Les Embiez", "Port-Cros")] <- 1
sites$vjust[sites$site %in% c("Bastia", "Carry")] <- 0
map + geom_point(data=sites) + geom_text(aes(label=site, hjust=hjust, vjust=vjust), data=sites, size=3)
# extract date components
d$year <- factor(year(d$date))
d$month <- factor(month(d$date))
d$yday <- yday(d$date)
d$yweek <- week(d$date)
start <- as.Date(str_c(min(year(d$date)), "-01-01"))
d$days_since_start <- as.numeric(difftime(d$date, start, units="days"))
d$weeks_since_start <- as.numeric(ceiling(difftime(d$date, start, units="weeks")))
## Add zero catches all non-observed taxa ----
taxo <- unique(select(d, family, genus, species))
taxo <- arrange(taxo, family, genus, species)
d0 <- ddply(d, ~date+year+month+yday+yweek+days_since_start+weeks_since_start+site+lon+lat, function(x) {
x <- full_join(select(x, family, genus, species, cpue), taxo, by=c("family", "genus", "species"))
x$cpue[is.na(x$cpue)] <- 0
return(x)
}, .progress="text")
# remove lines with only NA taxonomic specification (were used to specify 0 catches)
d0 <- d0[-which(is.na(d0$family) & is.na(d0$genus) &  is.na(d0$species)),]
d <- d[-which(is.na(d$family) & is.na(d$genus) &  is.na(d$species)),]
# remove 0 catches from d
d <- filter(d, cpue != 0)
###--- Add information to sites
#Topography, area of sites
sites$topography <- "gulf_lion"
sites$topography[which(sites$lon>=5.8)]<-"PACA"   ## east of Cap sicié
sites$topography[which(sites$site=="Les Embiez")]<-"PACA"
#Region of sites
sites$region <- "west_rhone"
sites$region[which(sites$lon>=4.8)]<-"east_rhone"
## ----
save(d, d0, effort, sites, map, taxo, file="data.rda")
help("pairwise.wilcox.test")
load("data.rda")
library("plyr")
library("dplyr")
library("tidyverse")
library("FactoMineR")
library("printr")
library("stringr")
library("lubridate")
library("vegan")
library("reshape")
library("ggdendro")
source("lib_plot.R")        # colour scales and theme
source("lib_data_manip.R")  # summarise tables
source("lib_factorial.R")
dd <- d0 %>% filter(year !=2016, species %in% common_species) %>% group_by(yweek, year, site, species) %>% summarise(cpue=mean(cpue))
# create a new weekly date coordinate
dd$date <- ymd(str_c(dd$year, "-01-01")) + weeks(dd$yweek)
# and a new fake one starting all the same year
dd$fake_date <- ymd("2014-01-01") + weeks(dd$yweek)
# rescale abundances per species, site and year, to get a comparable peak per year
dd <- dd %>% group_by(species, site, year) %>% mutate(scaled_cpue=cpue/max(cpue))
dd$scaled_cpue[is.na(dd$scaled_cpue)] <- 0  # when max = 0
# rename species for display
dd$species_abbr <- abbrev_sp(dd$species, n=4)
#Compute mean date and week of recruitment for each species per site and year
syn <- dd %>% group_by(year, site, species) %>% summarise(cpue = max(cpue)) %>% ungroup()
syn <- filter(syn, cpue !=0) # we focus on high values to find date of recruitment
syn <- inner_join(syn, dd, by = c("year", "site", "species","cpue"))
syn <- syn %>% group_by(year, site, species) %>% summarise(cpue = mean(cpue), date = mean(date), yweek=mean(yweek)) %>% ungroup() # mean because some species have twice the same max abundance
syn_year_site <- syn %>% group_by(site, species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek))%>%ungroup() # ref all years includes
syn_site <- syn %>% group_by(year, species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek))%>%ungroup() # ref all sites includes
syn_year <- syn %>% group_by(species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek)) %>% ungroup() # ref all sites and year includes
# Time lag between site, for each year and each species
lag <- left_join(syn_site,syn, by = c("year","species"))
lag <- lag %>% group_by(species,year,site, ref_date, ref_yweek, date, yweek) %>% summarise(lag_day = date-ref_date, lag_week = round(yweek-ref_yweek))%>%ungroup()
lag <- lag %>% arrange(species,year, lag_week)
# Plot and mean lag
lag <- lag[-which(lag$species=="Boops boops"),]
lag <- lag[-which(lag$species=="Oblada melanura"),]
res_site <- lag %>% group_by(site) %>% summarise(mean = mean(lag_week))
# Plot and mean lag
lag <- lag[-which(lag$species=="Boops boops"),]
lag <- lag[-which(lag$species=="Oblada melanura"),]
res <- lag %>% group_by(year) %>% summarise(mean = mean(lag_week))
# mean CPUE per week, site, and species for common species
dd <- d0 %>% filter(year !=2016, species %in% common_species) %>% group_by(yweek, year, site, species) %>% summarise(cpue=mean(cpue))
# create a new weekly date coordinate
dd$date <- ymd(str_c(dd$year, "-01-01")) + weeks(dd$yweek)
# and a new fake one starting all the same year
dd$fake_date <- ymd("2014-01-01") + weeks(dd$yweek)
# rescale abundances per species, site and year, to get a comparable peak per year
dd <- dd %>% group_by(species, site, year) %>% mutate(scaled_cpue=cpue/max(cpue))
dd$scaled_cpue[is.na(dd$scaled_cpue)] <- 0  # when max = 0
# rename species for display
dd$species_abbr <- abbrev_sp(dd$species, n=4)
#Compute mean date and week of recruitment for each species per site and year
syn <- dd %>% group_by(year, site, species) %>% summarise(cpue = max(cpue)) %>% ungroup()
syn <- filter(syn, cpue !=0) # we focus on high values to find date of recruitment
syn <- inner_join(syn, dd, by = c("year", "site", "species","cpue"))
syn <- syn %>% group_by(year, site, species) %>% summarise(cpue = mean(cpue), date = mean(date), yweek=mean(yweek)) %>% ungroup() # mean because some species have twice the same max abundance
syn_year_site <- syn %>% group_by(site, species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek))%>%ungroup() # ref all years includes
syn_site <- syn %>% group_by(year, species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek))%>%ungroup() # ref all sites includes
syn_year <- syn %>% group_by(species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek)) %>% ungroup() # ref all sites and year includes
# Time lag between site, for each year and each species
lag <- left_join(syn_site,syn, by = c("year","species"))
lag <- lag %>% group_by(species,year,site, ref_date, ref_yweek, date, yweek) %>% summarise(lag_day = date-ref_date, lag_week = round(yweek-ref_yweek))%>%ungroup()
lag <- lag %>% arrange(species,year, lag_week)
View(lag)
lag <- lag[-which(lag$species=="Boops boops"),]
lag <- lag[-which(lag$species=="Oblada melanura"),]
lag <- lag[-which(lag$species=="Boops boops"),]
# Time lag between site, for each year and each species
lag <- left_join(syn_site,syn, by = c("year","species"))
lag <- lag %>% group_by(species,year,site, ref_date, ref_yweek, date, yweek) %>% summarise(lag_day = date-ref_date, lag_week = round(yweek-ref_yweek))%>%ungroup()
lag <- lag %>% arrange(species,year, lag_week)
lag <- lag[-which(lag$species=="Boops boops"),]
lag <- lag[-which(lag$species=="Oblada melanura"),]
res_year <- lag %>% group_by(year) %>% summarise(mean = mean(lag_week))
View(res_year)
ggplot(lag) +
geom_histogram(aes(x=lag_week),binwidth=1) +
geom_density(aes(x=lag_week, y=..count..)) +
facet_wrap(~year, ncol=3)+geom_vline(xintercept = 0,linetype="dashed") #+ geom_density(aes(x=lag_week))
length(unique(na.omit(d$family)))
length(unique(na.omit(d$family)))/length(unique(l$family))
library("readxl")
l <- read_excel("data/Liste especes mediterranee.xlsx", sheet=1)
# clean names written in the file
l$family <- str_trim(str_to_lower(l$family))
l$genus <- str_trim(str_to_lower(l$genus))
l$species <- str_trim(str_to_lower(l$species))
# remove undetermined species (1 atherinidae sp.)
l <- filter(l, species != "sp.")
# check that each genus has the same family
filter(summarise(group_by(l, genus), n=length(unique(family))), n>1)
# remove non-demersal fish
non_demersal <- c(
"engraulidae",   # anchois
"scombridae",    # thons...
"clupeidae",     # sardines
"sphyraenidae",  # barracudas
"exocoetidae",   # poissons volants
"coryphaenidae", # coryphène
"chlorophthalmidae",
"xiphiidae",     # espadons
"istiophoridae", # marlin
"trichiuridae",  # sabres
"molidae",       # poisson lune
"regalecidae",   # regalec
"trachipteridae",
"ammodytidae",   # profond  # ??? TODO check
"macrouridae",   # profond
"aulopidae",     # profond
"petromyzonidae" # eggs in river
)
l$demersal <- ! l$family %in% non_demersal
l_demersal <- filter(l, demersal == TRUE)
l$family <- str_to_title(l$family)
l$genus <- str_to_title(l$genus)
l_demersal$family <- str_to_title(l_demersal$family)
l_demersal$genus <- str_to_title(l_demersal$genus)
# Join genus and species suffix in species column
l_demersal$species <- str_c(l_demersal$genus, " ", l_demersal$species)
length(unique(na.omit(d$family)))/length(unique(l$family))
(length(unique(na.omit(d$family))))*100/length(unique(l$family))
(length(unique(na.omit(d$family)))*100)/length(unique(l$family))
round((length(unique(na.omit(d$family)))*100)/length(unique(l$family)), 0)
round((length(unique(na.omit(d$family)))*100)/length(unique(l_demersal$family)), 0)
dd <- d0 %>% filter(year != 2016) %>% group_by(date, year, site) %>% summarise(cpue=sum(cpue))
test <- kruskal.test(cpue ~ year, data=dd)
test
pairwise.wilcox.test(dd$cpue,dd$year, p.adjust.method="bonferroni")
p<-pairwise.wilcox.test(dd$cpue,dd$year, p.adjust.method="bonferroni")
as.data.fram(p)
as.data.frame(p)
summary(p)
p$p.value
syn_year_site
dd <- d0 %>% filter(year !=2016, species %in% common_species) %>% group_by(yweek, year, site, species) %>% summarise(cpue=mean(cpue))
# create a new weekly date coordinate
dd$date <- ymd(str_c(dd$year, "-01-01")) + weeks(dd$yweek)
# and a new fake one starting all the same year
dd$fake_date <- ymd("2014-01-01") + weeks(dd$yweek)
# rescale abundances per species, site and year, to get a comparable peak per year
dd <- dd %>% group_by(species, site, year) %>% mutate(scaled_cpue=cpue/max(cpue))
dd$scaled_cpue[is.na(dd$scaled_cpue)] <- 0  # when max = 0
# rename species for display
dd$species_abbr <- abbrev_sp(dd$species, n=4)
#Compute mean date and week of recruitment for each species per site and year
syn <- dd %>% group_by(year, site, species) %>% summarise(cpue = max(cpue)) %>% ungroup()
syn <- filter(syn, cpue !=0)
syn <- inner_join(syn, dd, by = c("year", "site", "species","cpue"))
syn <- syn %>% group_by(year, site, species) %>% summarise(cpue = mean(cpue), date = mean(date), yweek=mean(yweek)) %>% ungroup() # mean because some species have twice the same max abundance
syn_year_site <- syn %>% group_by(site, species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek))%>%ungroup() # ref all years includes
syn_year_site
)
syn_site <- syn %>% group_by(year, species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek))%>%ungroup() # ref all sites includes
syn_site
syn_year
syn_year_site
syn_site
syn_year
syn_site
dd <- d0 %>% filter(year !=2016, species %in% common_species) %>% group_by(yweek, year, site, species) %>% summarise(cpue=mean(cpue))
# create a new weekly date coordinate
dd$date <- ymd(str_c(dd$year, "-01-01")) + weeks(dd$yweek)
# and a new fake one starting all the same year
dd$fake_date <- ymd("2014-01-01") + weeks(dd$yweek)
# rescale abundances per species, site and year, to get a comparable peak per year
dd <- dd %>% group_by(species, site, year) %>% mutate(scaled_cpue=cpue/max(cpue))
dd$scaled_cpue[is.na(dd$scaled_cpue)] <- 0  # when max = 0
# rename species for display
dd$species_abbr <- abbrev_sp(dd$species, n=4)
#Compute mean date and week of arrival for each species per site and year
syn <- dd %>% group_by(year, site, species) %>% summarise(cpue = max(cpue)) %>% ungroup()
syn <- filter(syn, cpue !=0)
syn <- inner_join(syn, dd, by = c("year", "site", "species","cpue"))
syn <- syn %>% group_by(year, site, species) %>% summarise(cpue = mean(cpue), date = mean(date), yweek=mean(yweek)) %>% ungroup() # mean because some species have twice the same max abundance
## Week of arrival for sites, by species
syn_site <- syn %>% group_by(site, species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek))%>%ungroup()
## Week of arrival for years, by species
syn_year <- syn %>% group_by(year, species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek))%>%ungroup() # ref all sites includes
## Week of arrival by species
syn_specie <- syn %>% group_by(species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek)) %>% ungroup() # ref all sites and year includes
### Compute time lag between sites for each year, by species
lag <- left_join(syn_year,syn, by = c("year","species"))
lag <- lag %>% group_by(species,year,site, ref_date, ref_yweek, date, yweek) %>% summarise(lag_day = date-ref_date, lag_week = round(yweek-ref_yweek))%>%ungroup()
lag <- lag %>% arrange(species,year, lag_week)
lag
rm(list=ls())
load("data.rda")
library("plyr")
library("dplyr")
library("tidyverse")
library("FactoMineR")
library("printr")
library("stringr")
library("lubridate")
library("vegan")
library("reshape")
library("ggdendro")
dd <- d0 %>% filter(year !=2016, species %in% common_species) %>% group_by(yweek, year, site, species) %>% summarise(cpue=mean(cpue))
# create a new weekly date coordinate
dd$date <- ymd(str_c(dd$year, "-01-01")) + weeks(dd$yweek)
# and a new fake one starting all the same year
dd$fake_date <- ymd("2014-01-01") + weeks(dd$yweek)
# rescale abundances per species, site and year, to get a comparable peak per year
dd <- dd %>% group_by(species, site, year) %>% mutate(scaled_cpue=cpue/max(cpue))
dd$scaled_cpue[is.na(dd$scaled_cpue)] <- 0  # when max = 0
# rename species for display
dd$species_abbr <- abbrev_sp(dd$species, n=4)
#Compute mean date and week of arrival for each species per site and year
syn <- dd %>% group_by(year, site, species) %>% summarise(cpue = max(cpue)) %>% ungroup()
syn <- filter(syn, cpue !=0)
syn <- inner_join(syn, dd, by = c("year", "site", "species","cpue"))
syn <- syn %>% group_by(year, site, species) %>% summarise(cpue = mean(cpue), date = mean(date), yweek=mean(yweek)) %>% ungroup() # mean because some species have twice the same max abundance
## Week of arrival for sites, by species
syn_site <- syn %>% group_by(site, species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek))%>%ungroup()
## Week of arrival for years, by species
syn_year <- syn %>% group_by(year, species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek))%>%ungroup() # ref all sites includes
## Week of arrival by species
syn_species <- syn %>% group_by(species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek)) %>% ungroup() # ref all sites and year includes
### Compute time lag between sites for each year, by species
lag <- left_join(syn_year,syn, by = c("year","species"))
lag <- lag %>% group_by(species,year,site, ref_date, ref_yweek, date, yweek) %>% summarise(lag_day = date-ref_date, lag_week = round(yweek-ref_yweek))%>%ungroup()
lag <- lag %>% arrange(species,year, lag_week)
# Plot and mean lag for sites
lag <- lag[-which(lag$species=="Boops boops"),]
lag <- lag[-which(lag$species=="Oblada melanura"),]
res_site <- lag %>% group_by(site) %>% summarise(mean = mean(lag_week))
ggplot(lag) +
geom_histogram(aes(x=lag_week),binwidth=1) +
geom_density(aes(x=lag_week, y=..count..)) +
facet_wrap(~site, ncol=3)+geom_vline(xintercept = 0,linetype="dashed") #+ geom_density(aes(x=lag_week))
# Time lag between year, by species species
lag_year <- left_join(syn_year,syn_species, by = c("species"))
lag_year <- select(lag_year, species, year, date = ref_date.x, yweek = ref_yweek.x, ref_date = ref_date.y, ref_yweek = ref_yweek.y)
lag_year <- lag_year %>% group_by(species, year, ref_date, ref_yweek,date, yweek) %>% summarise(lag_year_week = round(yweek-ref_yweek,0)) %>% ungroup()
lag_year <- lag_year %>% arrange(species, lag_year_week)
# Time lag between site, all years include
lag_site <- left_join(syn_site,syn_species, by = c("species"))
lag_site <- select(lag_site, species, site, date = ref_date.x, yweek = ref_yweek.x, ref_date = ref_date.y, ref_yweek = ref_yweek.y)
lag_site <- lag_site %>% group_by(species,site, ref_date, ref_yweek, date, yweek) %>% summarise(lag_site_week = round(yweek-ref_yweek,0))%>%ungroup()
lag_site <- lag_site %>% arrange(species,lag_site_week)
res_year <- lag %>% group_by(year) %>% summarise(mean = mean(lag_week))
ggplot(lag) +
geom_histogram(aes(x=lag_week),binwidth=1) +
geom_density(aes(x=lag_week, y=..count..)) +
facet_wrap(~year, ncol=3)+geom_vline(xintercept = 0,linetype="dashed") #+ geom_density(aes(x=lag_week))
lag
res_year <- lag %>% group_by(year) %>% summarise(mean = mean(lag_week))
res_year
lag
help(CAPdiscrim)
library(BiodiversityR)
help(CAPdiscrim)
library(vegan)
library(MASS)
data(dune)
data(dune.env)
Ordination.model1 <- CAPdiscrim(dune~Management, data=dune.env,
dist="bray", axes=2, m=0)
Ordination.model1
plot1 <- ordiplot(Ordination.model1, type="none")
ordisymbol(plot1,dune.env,"Management",legend=TRUE)
sqrt(0.88)
dune.env
library(vegan)
library(MASS)
data(dune)
data(dune.env)
Ordination.model1 <- CAPdiscrim(dune~Management+UseMethod(), data=dune.env,
dist="bray", axes=2, m=0)
Ordination.model1
plot1 <- ordiplot(Ordination.model1, type="none")
ordisymbol(plot1,dune.env,"Management",legend=TRUE)
library(vegan)
library(MASS)
data(dune)
data(dune.env)
Ordination.model1 <- CAPdiscrim(dune~Management+Use, data=dune.env,
dist="bray", axes=2, m=0)
Ordination.model1
plot1 <- ordiplot(Ordination.model1, type="none")
ordisymbol(plot1,dune.env,"Management",legend=TRUE)
library(vegan)
library(MASS)
data(dune)
data(dune.env)
Ordination.model1 <- CAPdiscrim(dune~Management+Use, data=dune.env,
dist="bray", axes=2, m=0)
Ordination.model1
plot1 <- ordiplot(Ordination.model1, type="none")
ordisymbol(plot1,dune.env,c("Management","Use"),legend=TRUE)
help(ordiplot)
library(vegan)
library(MASS)
data(dune)
data(dune.env)
Ordination.model1 <- CAPdiscrim(dune~Management+Use, data=dune.env,
dist="bray", axes=2, m=0)
Ordination.model1
plot1 <- ordiplot(Ordination.model1, type="none")
ordisymbol(plot1,dune.env,c("Management","Use"),legend=TRUE)
library(vegan)
library(MASS)
data(dune)
data(dune.env)
Ordination.model1 <- CAPdiscrim(dune~Management+Use, data=dune.env,
dist="bray", axes=2, m=0)
Ordination.model1
plot1 <- ordiplot(Ordination.model1, type="points")
help(capscale)
capscale(varespec ~ N + P + K + Condition(Al), varechem,
dist="bray", add =2)
data(varespec)
data(varechem)
capscale(varespec ~ N + P + K + Condition(Al), varechem,
dist="bray", add =2)
db <-capscale(varespec ~ N + P + K + Condition(Al), varechem,
dist="bray", add =2)
plot(db)
rm(list=ls())
load("data.rda")
dd <- d0 %>% filter(year !=2016, species %in% common_species) %>% group_by(yweek, year, site, species) %>% summarise(cpue=mean(cpue))
# create a new weekly date coordinate
dd$date <- ymd(str_c(dd$year, "-01-01")) + weeks(dd$yweek)
# and a new fake one starting all the same year
dd$fake_date <- ymd("2014-01-01") + weeks(dd$yweek)
# rescale abundances per species, site and year, to get a comparable peak per year
dd <- dd %>% group_by(species, site, year) %>% mutate(scaled_cpue=cpue/max(cpue))
dd$scaled_cpue[is.na(dd$scaled_cpue)] <- 0  # when max = 0
# rename species for display
dd$species_abbr <- abbrev_sp(dd$species, n=4)
#Compute mean date and week of arrival for each species per site and year
syn <- dd %>% group_by(year, site, species) %>% summarise(cpue = max(cpue)) %>% ungroup()
syn <- filter(syn, cpue !=0)
syn <- inner_join(syn, dd, by = c("year", "site", "species","cpue"))
syn <- syn %>% group_by(year, site, species) %>% summarise(cpue = mean(cpue), date = mean(date), yweek=mean(yweek)) %>% ungroup() # mean because some species have twice the same max abundance
## Week of arrival for sites, by species
syn_site <- syn %>% group_by(site, species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek))%>%ungroup()
## Week of arrival for years, by species
syn_year <- syn %>% group_by(year, species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek))%>%ungroup() # ref all sites includes
## Week of arrival by species
syn_species <- syn %>% group_by(species) %>% summarise(ref_date = mean(date), ref_yweek=mean(yweek)) %>% ungroup() # ref all sites and year includes
### Compute time lag between sites for each year, by species
lag <- left_join(syn_year,syn, by = c("year","species"))
lag <- lag %>% group_by(species,year,site, ref_date, ref_yweek, date, yweek) %>% summarise(lag_day = date-ref_date, lag_week = round(yweek-ref_yweek))%>%ungroup()
lag <- lag %>% arrange(species,year, lag_week)
# Plot and mean lag for sites
lag <- lag[-which(lag$species=="Boops boops"),]
lag <- lag[-which(lag$species=="Oblada melanura"),]
res_site <- lag %>% group_by(site) %>% summarise(mean = mean(lag_week))
```
Anomaly for sites
```{r fig.height=7}
ggplot(lag) +
geom_histogram(aes(x=lag_week),binwidth=1) +
geom_density(aes(x=lag_week, y=..count..)) +
facet_wrap(~site, ncol=3)+geom_vline(xintercept = 0,linetype="dashed") #+ geom_density(aes(x=lag_week))
```
Anomaly of larvae arrival (in week) between years
```{r}
# Plot and mean lag
res_year <- lag %>% group_by(year) %>% summarise(mean = mean(lag_week))
```
```{r fig.height=4}
ggplot(lag) +
geom_histogram(aes(x=lag_week),binwidth=1) +
geom_density(aes(x=lag_week, y=..count..)) +
facet_wrap(~year, ncol=3)+geom_vline(xintercept = 0,linetype="dashed") #+ geom_density(aes(x=lag_week))
```
```{r}
# Time lag between year, by species species
lag_year <- left_join(syn_year,syn_species, by = c("species"))
lag_year <- select(lag_year, species, year, date = ref_date.x, yweek = ref_yweek.x, ref_date = ref_date.y, ref_yweek = ref_yweek.y)
lag_year <- lag_year %>% group_by(species, year, ref_date, ref_yweek,date, yweek) %>% summarise(lag_year_week = round(yweek-ref_yweek,0)) %>% ungroup()
lag_year <- lag_year %>% arrange(species, lag_year_week)
# Time lag between site, all years include
lag_site <- left_join(syn_site,syn_species, by = c("species"))
lag_site <- select(lag_site, species, site, date = ref_date.x, yweek = ref_yweek.x, ref_date = ref_date.y, ref_yweek = ref_yweek.y)
lag_site <- lag_site %>% group_by(species,site, ref_date, ref_yweek, date, yweek) %>% summarise(lag_site_week = round(yweek-ref_yweek,0))%>%ungroup()
lag_site <- lag_site %>% arrange(species,lag_site_week)
lag_year <- left_join(syn_year,syn_species, by = c("species"))
lag_year
lag_year <- select(lag_year, species, year, date = ref_date.x, yweek = ref_yweek.x, ref_date = ref_date.y, ref_yweek = ref_yweek.y)
library("readxl")
library("stringr")
library("plyr")
library("dplyr")
library("lubridate")
library("ggplot2")
lag_year <- left_join(syn_year,syn_species, by = c("species"))
lag_year <- select(lag_year, species, year, date = ref_date.x, yweek = ref_yweek.x, ref_date = ref_date.y, ref_yweek = ref_yweek.y)
lag_year <- lag_year %>% group_by(species, year, ref_date, ref_yweek,date, yweek) %>% summarise(lag_year_week = round(yweek-ref_yweek,0)) %>% ungroup()
lag_year <- lag_year %>% arrange(species, lag_year_week)
# Time lag between site, all years include
lag_site <- left_join(syn_site,syn_species, by = c("species"))
lag_site <- select(lag_site, species, site, date = ref_date.x, yweek = ref_yweek.x, ref_date = ref_date.y, ref_yweek = ref_yweek.y)
lag_site <- lag_site %>% group_by(species,site, ref_date, ref_yweek, date, yweek) %>% summarise(lag_site_week = round(yweek-ref_yweek,0))%>%ungroup()
lag_site <- lag_site %>% arrange(species,lag_site_week)
lag <- left_join(syn_year,syn, by = c("year","species"))
lag
lag_year <- left_join(syn_year,syn_species, by = c("species"))
lag_year
lag_year <- select(lag_year, species, year, date = ref_date.x, yweek = ref_yweek.x, ref_date = ref_date.y,ref_yweek = ref_yweek.y)
help("select")
